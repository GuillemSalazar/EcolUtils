% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/EcolUtils_functions.R
\name{spec.gen}
\alias{spec.gen}
\title{Specialist/Generalist classification of OTUs based on niche width and permutation algorithms}
\usage{
spec.gen(comm.tab, niche.width.method = "levins", perm.method = "quasiswap",
  n = 1000, probs = c(0.025, 0.975))
}
\arguments{
\item{comm.tab}{Community data, a matrix-like object (samples as rows; OTUs as columns).}

\item{niche.width.method}{Niche width index (from \code{niche.width} in \pkg{spaa}): \code{levins} (default) or \code{shannon}. Or simply the \code{occurrence}: the number of samples where an OTU occurs.}

\item{perm.method}{Method for null model construction (from \code{permatswap} in \pkg{vegan}). Currently, only \code{quasiswap} (default) has been thoroughly tested.}

\item{n}{Number of permutations.}

\item{probs}{Probabilities for confidence interval calculations.}
}
\value{
Data frame with the observed niche width value, the mean and CI null values and the classification of each OTU.
}
\description{
Classification of OTUs in generalists / specialists / non-significant based on the deviation of niche width indexes (\code{shanon}, \code{levins} or \code{occurrence}) from null values computed with permutation algorithms for community matrices.
}
\details{
Basically the \code{spec.gen} function computes a niche width index for each OTU in the \code{comm.tab}. The mean index value and CI for each OTU is computed for \code{n} null matrices created through permutation algorithms. Each OTU is classified as specialist / generalist / non significant if the real value is lower / higher / within the CI.
}
\examples{
library(RCurl)
x<-getURL("https://raw.githubusercontent.com/GuillemSalazar/MolEcol_2015/master/OTUtable_Salazar_etal_2015_Molecol.txt")
comm.tab<-read.table(text=x,sep="\\t",row.names=1,header=TRUE,comment.char="@")
comm.tab<-t(comm.tab[,1:60])
comm.tab<-comm.tab[,which(colSums(comm.tab)>0)]
res<-spec.gen(comm.tab,n=100)

comm.tab.bin<-ceiling(comm.tab/max(comm.tab))
plot(colSums(comm.tab),colSums(comm.tab.bin)/dim(comm.tab.bin)[1],col=res$sign,pch=19,log="x",xlab="Abundance",ylab="Occurrence")
legend("bottomright",levels(res$sign),col=1:3,pch=19,inset=0.01,cex=0.7)
}
\author{
Guillem Salazar <salazar@icm.csic.es>
}
\keyword{EcolUtils}

